// To read a cookie we need a cookie parser
// jwt tokena are encryptwed hash  consists of three things that is header payload and signature 


// only sign in and login api will not have auth.js middlewear wlse all other API's will have it 
// never ever trust req.params or anything comming from request it may crash your website always add validators to check these request

// always use return in any block of code in conditional statements as it helps to maintaion flow of the code



// Hard ships only one can send connection req to each other that is rahul can send req to mina but mina cant again send request to rahul

// api validation where api is not testing wether the user exists in db or not 



// pre is a middleware in mongoose which is used to check the condition basixally acsts as a middlewear before saving the document in to the database  

// there are indexes in db which makes api response faster from fetching the data from the database


// compund index used for indexing -> it fastens the query and efficeintly manages the system if therwe are millions of records


// ref and populate
// ref: very powetful, creates links between two schema and joins them on basedn on the model name(that u are expoerting) 








## DevConnect

- Connect with like minded Developers

# To start project

- npm run dev

# Libraries Used

1. **bcrypt**  
   - Used for hashing and verifying passwords securely.

2. **validator**  
   - Provides validation utilities for strings (e.g., email, URL, etc.) and schema models.

3. **jsonwebtoken**  
   - Used to create and verify JSON Web Tokens (JWT) for secure session management.

4. **cookie-parser**  
   - Parses and provides easy access to cookies from HTTP requests.

5. **express**  
   - A lightweight and flexible web application framework for handling routing and middleware.

6. **mongoose**  
   - A MongoDB object data modeling (ODM) library for schema definitions and database operations.

7. **axios**
   - A api handler used to handle apis 



// skip and limit in MongoDB

// /user/feed/:id      //req.params
// /user/feed/page?=   //req.query
